//###################################################################################################
// Create Function

module.exports.create = function(_config) {
    return new Handler(_config);
};

//###################################################################################################
// Basic Object
function Handler(_config) {
    /////////////////////////////////////////////////////////////////////////////////////////////////
   
    var 
    ////=============================================================================================
    // Requirements
    
    ////=============================================================================================
    // Propertys
    
        self = this,
        config,
    
    ////=============================================================================================
    // Methods
    
        ////-----------------------------------------------------------------------------------------
        // Function
        init = function(_config) {
            
            if( _config !== undefined )
                config = _config;
            else
                console.error('Options undefined');
            
            events.EventEmitter.call(this);
                        

        }        


    ////=============================================================================================
    ;

    /////////////////////////////////////////////////////////////////////////////////////////////////

    init(_config);
    
    /////////////////////////////////////////////////////////////////////////////////////////////////
}

//###################################################################################################
// Inherit from EventEmitter

events = require('events');
Handler.super_ = events.EventEmitter;
Handler.prototype = Object.create(events.EventEmitter.prototype, {
    constructor: {
        value: Handler,
        enumerable: false
    }   
});
