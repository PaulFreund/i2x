//###################################################################################################
// IRC Handler
/*
    Events:
    
    - message   (from, to, message)                     : Simple text message
    - command   (from, to, message)                     : Messages that begin with !
    - names (... names )                             : Nicklist from the channel
    - topic (... topic, who )                        : Channel Topic
    - join  (... channel, nick )                     : Nick joined
    - part  (... channel, nick )                     : Nick parted
    - kick  (... channel, nick )                     : Nick kicked
    - nick  (... oldNick, newNick, channels )        : Nick joined
    
    Commands;
    
    - say       (to, message)                           : Send string to channel or person 
    - send      (to, args)                              : Not implemented yet
    
*/

//###################################################################################################
// Create Function

module.exports.create = function(_events, _config) {
    return new Handler(_events, _config);
};

//###################################################################################################
// Basic Object
function Handler(_events, _config) {
    /////////////////////////////////////////////////////////////////////////////////////////////////
   
    var 
    ////=============================================================================================
    // Requirements
        
        irc = require('irc'),
    
    ////=============================================================================================
    // Propertys
    
        name = 'irc',
        self = this,
        events,
        ircServer,
        config,
    
    ////=============================================================================================
    // Methods
    
        ////-----------------------------------------------------------------------------------------
        // Initialize
        init = function(_events, _config) {
            if( _events !== undefined )
                events = _events;
            else
                console.error('['+name+']EventEmitter undefined');
            
            if( _config !== undefined )
                config = _config;
            else
                events.emit('error', name, 'Options undefined');
                                    
            ircServer = new irc.Client(config.host, config.name, {channels: [config.channel]});

            // Events
            ircServer.addListener('message', function(from, to, message) {
                if( message.charAt(0) === '!')
                    events.emit(name, 'command', from, to, message);
                else
                    events.emit(name, 'message', from, to, message);                
            });

            ircServer.addListener('names', function(channel, names) {
                events.emit(name, 'names', channel, names);
            });  
            
            ircServer.addListener('topic', function(channel,topic, nick) {
                events.emit(name,'topic', channel, topic, nick);
            });

            ircServer.addListener('join', function(channel,nick) {
                events.emit(name,'join', channel, nick);
            });

            ircServer.addListener('part', function(channel,nick) {
                events.emit(name,'part', channel, nick);
            });
            
            ircServer.addListener('kick', function(channel,nick) {
                events.emit(name,'kick', channel, nick);
            });

            ircServer.addListener('nick', function(oldnick,newnick, channels) {
                events.emit(name,'nick', oldnick, newnick, channels);
            });

            // Actions
            events.on(name, onEvent);
        },
        
        ////-----------------------------------------------------------------------------------------
        // Decide which function should handle the event
        onEvent = function(type) {
            try {
                var args = Array.prototype.slice.call(arguments, 1);
            
                switch(type) {
                case 'say':
                    say.apply(this,args);
                    break;
                case 'send':
                    send.apply(this,args);
                    break;
                }
            }
            catch( err )
            {
                events.emit('error', name, err);   
            }
        },
        
        ////-----------------------------------------------------------------------------------------
        // Send an IRC Command
        say = function(to, message) {     
            ircServer.say(to, message);               
        },

        ////-----------------------------------------------------------------------------------------
        // Send an IRC Command
        send = function(to, args) {     
            var arr = [];
            ircServer.send.apply(this, arr.concat(to, args));
        }
        

    ////=============================================================================================
    ;

    /////////////////////////////////////////////////////////////////////////////////////////////////

    init(_events, _config);
    
    /////////////////////////////////////////////////////////////////////////////////////////////////
}

